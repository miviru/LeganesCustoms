@page "/mecanico"
@inject IEmpleadoService EmpleadoService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization
@using LeganesCustomsBlazor.Dtos
@using LeganesCustomsBlazor.Services

<PageTitle>Mec치nico</PageTitle>

@if (!tienePermiso)
{
    <p>No tienes permisos para acceder a esta p치gina.</p>
    <p><a href="/">Volver al inicio</a></p>
}
else if (isAdmin)
{
    <h3>Bienvenido, Administrador</h3>
    <p>Acceso a las funcionalidades del mec치nico concedido.</p>
}
else if (empleado != null)
{
    <h3>Bienvenido, @empleado.Nombre</h3>
}

@code {
    private bool tienePermiso = false;
    private bool isAdmin = false;
    private EmpleadoDto? empleado;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Diagn칩stico
        Console.WriteLine($"Usuario autenticado: {user.Identity.IsAuthenticated}");
        Console.WriteLine($"Roles: {string.Join(", ", user.Claims.Where(c => c.Type == "role").Select(c => c.Value))}");

        if (user.IsInRole("Admin"))
        {
            isAdmin = true;
            tienePermiso = true;
        }
        else if (user.IsInRole("EmpleadoMecanico"))
        {
            tienePermiso = true;
            empleado = await EmpleadoService.GetEmpleadoLogueadoAsync();
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
}
