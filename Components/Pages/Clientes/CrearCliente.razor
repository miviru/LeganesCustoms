@page "/crearCliente"
@inject ClienteService ClienteService
@inject VehiculoService VehiculoService
@inject NavigationManager NavigationManager
@using LeganesCustomsBlazor.Dtos
@using System.Text;

<PageTitle>Crear Clientes</PageTitle>

<div class="container-fluid">
    <div class="row mt-3">
        <div class="col-lg-12">
            <h3>CREAR CLIENTES</h3>
        </div>
    </div>

    <div class="row">
        <EditForm Model="@cliente" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }

            <!-- Información básica del cliente -->
            <div class="form-group">
                <label for="name" class="form-label">Nombre:</label>
                <div class="col-md-5">
                    <InputText id="name" class="form-control" @bind-Value="cliente.Nombre" />
                </div>
                <ValidationMessage For="@(() => cliente.Nombre)" />
            </div>

            <div class="form-group mt-3">
                <label for="apellido1" class="form-label">Primer apellido:</label>
                <div class="col-md-5">
                    <InputText id="apellido1" class="form-control" @bind-Value="cliente.Apellido1" />
                </div>
                <ValidationMessage For="@(() => cliente.Apellido1)" />
            </div>

            <div class="form-group mt-3">
                <label for="apellido2" class="form-label">Segundo apellido:</label>
                <div class="col-md-5">
                    <InputText id="apellido2" class="form-control" @bind-Value="cliente.Apellido2" />
                </div>
                <ValidationMessage For="@(() => cliente.Apellido2)" />
            </div>

            <div class="form-group mt-3">
                <label for="dni" class="form-label">DNI:</label>
                <div class="col-md-5">
                    <InputText id="dni" class="form-control" @bind-Value="cliente.DNI" />
                </div>
                <ValidationMessage For="@(() => cliente.DNI)" />
            </div>

            <div class="form-group mt-3">
                <label for="email" class="form-label">Email:</label>
                <div class="col-md-5">
                    <InputText id="email" class="form-control" @bind-Value="cliente.Email" />
                </div>
                <ValidationMessage For="@(() => cliente.Email)" />
            </div>

            <div class="form-group mt-3">
                <label for="telefono" class="form-label">Teléfono:</label>
                <div class="col-md-5">
                    <InputText id="telefono" class="form-control" @bind-Value="cliente.Telefono" />
                </div>
                <ValidationMessage For="@(() => cliente.Telefono)" />
            </div>

            <div class="form-group mt-3">
                <label for="direccion" class="form-label">Dirección:</label>
                <div class="col-md-5">
                    <InputText id="direccion" class="form-control" @bind-Value="cliente.Direccion" />
                </div>
            </div>

            <div class="form-group mt-3">
                <label for="password">Contraseña:</label>
                <div class="col-md-5">
                    <InputText id="password" type="password" class="form-control" @bind-Value="cliente.Password" />
                </div>
                <ValidationMessage For="@(() => cliente.Password)" />
            </div>

            <div class="form-group mt-3">
                <label for="confirmPassword">Confirmar Contraseña:</label>
                <div class="col-md-5">
                    <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="cliente.ConfirmPassword" />
                </div>
                <ValidationMessage For="@(() => cliente.ConfirmPassword)" />
            </div>

            <!-- Asociación de vehículos -->
            <div class="form-group mt-3">
                <div class="col-md-5">
                    <input type="checkbox" id="asociarVehiculo" @bind="AsociarVehiculo" />
                    <label for="asociarVehiculo">¿Desea asociar un vehículo existente?</label>
                    @if (AsociarVehiculo)
                    {
                        <div class="mt-3">
                            <label for="vehiculo">Vehículo:</label>
                            <select id="vehiculo" class="form-select" @bind="VehiculoSeleccionadoId">
                                <option value="">Seleccione un vehículo</option>
                                @foreach (var vehiculo in VehiculosDisponibles)
                                {
                                    <option value="@vehiculo.Id_Vehiculo">@vehiculo.Fabricante - @vehiculo.Modelo (@vehiculo.Matricula)</option>
                                }
                            </select>
                        </div>
                    }
                </div>
            </div>

            <div class="mt-3">
                <button type="submit" class="btn btn-outline-warning">Crear Cliente</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private ClienteDto cliente = new ClienteDto();
    private string errorMessage = string.Empty;

    private List<VehiculoDto> VehiculosDisponibles = new List<VehiculoDto>();
    private bool AsociarVehiculo = false;
    private long? VehiculoSeleccionadoId = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Cargar vehículos disponibles sin propietario
            VehiculosDisponibles = await VehiculoService.ObtenerVehiculosSinPropietarioAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al cargar vehículos: {ex.Message}";
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            if (AsociarVehiculo && VehiculoSeleccionadoId.HasValue)
            {
                cliente.Vehiculos.Add(new VehiculoDto { Id_Vehiculo = VehiculoSeleccionadoId.Value });
            }

            await ClienteService.CrearClienteAsync(cliente);
            NavigationManager.NavigateTo("/cliente");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al crear cliente: {ex.Message}";
        }
    }
}
