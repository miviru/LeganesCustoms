@page "/crearEmpleado"
@inject EmpleadoService EmpleadoService
@using LeganesCustomsBlazor.Models;
@using LeganesCustomsBlazor.Dtos;

<PageTitle>Crear Empleados</PageTitle>

<div class="container-fluid">
    <div class="row mt-3">
        <div class="col-lg-12">
            <h3>CREAR EMPLEADOS</h3>
        </div>
    </div>

    <div class="row">
        <EditForm Model="@empleado" OnValidSubmit="HandleValidSubmit" FormName="CrearEmpleado">
            <DataAnnotationsValidator />

            <!-- Mostrar mensaje de error -->
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }

            <div class="form-group">
                <label for="name" class="form-label">Nombre:</label>
                <div class="col-md-5">
                    <InputText id="name" class="form-control" @bind-Value="empleado.Nombre" />
                    <ValidationMessage For="@(() => empleado.Nombre)" />
                </div>
            </div>
            <div class="form-group mt-3">
                <label for="apellido1" class="form-label">Primer apellido:</label>
                <div class="col-md-5">
                    <InputText id="apellido1" class="form-control" @bind-Value="empleado.Apellido1" />
                    <ValidationMessage For="@(() => empleado.Apellido1)" />
                </div>
            </div>
            <div class="form-group mt-3">
                <label for="apellido2" class="form-label">Segundo apellido:</label>
                <div class="col-md-5">
                    <InputText id="apellido2" class="form-control" @bind-Value="empleado.Apellido2" />
                    <ValidationMessage For="@(() => empleado.Apellido2)" />
                </div>
            </div>
            <div class="form-group mt-3">
                <label for="dni" class="form-label">DNI:</label>
                <div class="col-md-5">
                    <InputText id="dni" class="form-control" @bind-Value="empleado.DNI" />
                    <ValidationMessage For="@(() => empleado.DNI)" />
                </div>
            </div>
            <div class="form-group mt-3">
                <label for="email" class="form-label">Email:</label>
                <div class="col-md-5">
                    <InputText id="email" class="form-control" @bind-Value="empleado.Email" />
                    <ValidationMessage For="@(() => empleado.Email)" />
                </div>
            </div>
            <div class="form-group mt-3">
                <label for="telefono" class="form-label">Telefono:</label>
                <div class="col-md-5">
                    <InputText id="telefono" class="form-control" @bind-Value="empleado.Telefono" />
                    <ValidationMessage For="@(() => empleado.Telefono)" />
                </div>
            </div>
            <div class="form-group mt-3">
                <label for="direccion" class="form-label">Dirección:</label>
                <div class="col-md-5">
                    <InputText id="direccion" class="form-control" @bind-Value="empleado.Direccion" />
                    <ValidationMessage For="@(() => empleado.Direccion)" />
                </div>
            </div>
            <div class="form-group mt-3">
                <label for="puesto" class="form-label">Puesto:</label>
                <div class="col-md-5">
                <InputSelect id="puesto" class="form-control" @bind-Value="empleado.Puesto">
                                <option value=""disabled selected>Seleccione un puesto</option>
                                @foreach (var puesto in puestosDisponibles)
                                {
                                    <option value="@puesto">@puesto</option>
                                }
                    </InputSelect>
                    <ValidationMessage For="@(() => empleado.Puesto)" />
                </div>
            </div>
            <div class="form-group mt-3">
                <label for="sueldo" class="form-label">Sueldo:</label>
                <div class="col-md-5">
                    <InputNumber id="sueldo" class="form-control" @bind-Value="empleado.Sueldo" />
                    <ValidationMessage For="@(() => empleado.Sueldo)" />
                </div>
            </div>
            <div class="mt-3">
                <button type="submit" class="btn btn-primary">Crear Empleado</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private EmpleadoDto empleado = new EmpleadoDto
    {
        Citas = new List<CitaDto>() // Inicialización con lista vacía
    };

    private List<string> puestosDisponibles = new List<string>
    {
        "Recepcionista",
        "Mecánico"
    };

    private string errorMessage = string.Empty;
    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(empleado);
    }

    private async Task HandleValidSubmit()
    {
        if (!editContext.Validate())
        {
            Console.WriteLine("Errores de validación en el formulario.");
            return;
        }

        try
        {
            // Llama al servicio con el EmpleadoDto directamente
            await EmpleadoService.CrearEmpleadoAsync(empleado);

            errorMessage = string.Empty;
            Console.WriteLine("Empleado creado con éxito.");
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Error al crear empleado: {ex.Message}");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al crear empleado: {ex.Message}";
            Console.WriteLine(errorMessage);
        }
    }

    private Empleado MapToEmpleado(EmpleadoDto dto)
    {
        return new Empleado
        {
            Id_Empleado = dto.Id_Empleado,
            Nombre = dto.Nombre,
            Apellido1 = dto.Apellido1,
            Apellido2 = dto.Apellido2,
            DNI = dto.DNI,
            Email = dto.Email,
            Telefono = dto.Telefono,
            Direccion = dto.Direccion
        };
    }
}
